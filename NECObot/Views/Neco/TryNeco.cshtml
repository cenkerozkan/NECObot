@{
ViewData["Title"] = "NECO";
}
<!DOCTYPE html>
<html>
<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .chat-container {
            height: 500px;
            display: flex;
            flex-direction: column;
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
        }
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
            border-bottom: 1px solid #dee2e6;
        }
        .chat-message {
            padding: 10px;
            border-radius: 0.25rem;
            margin-bottom: 10px;
        }
        .chat-message.user {
            background-color: #007bff;
            color: white;
            align-self: flex-end;
        }
        .chat-message.bot {
            background-color: #f1f1f1;
            align-self: flex-start;
        }
        .chat-input {
            display: flex;
            padding: 10px;
        }
        .chat-input input {
            flex: 1;
            border-radius: 0.25rem 0 0 0.25rem;
        }
        .chat-input button {
            border-radius: 0 0.25rem 0.25rem 0;
        }
    </style>
</head>
<body>
<div class="container mt-4">
    <div class="row">
        <!-- Side menu for chat threads -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span>Chats</span>
                    <button class="btn btn-sm btn-primary" onclick="addChat()">+</button>
                </div>
                <ul class="list-group list-group-flush" id="chatList">
                    <!-- Chat threads will be appended here -->
                </ul>
            </div>
        </div>
        <!-- Chat section -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-body chat-container">
                    <div class="chat-messages" id="chatMessages">
                        <!-- Messages will be appended here -->
                    </div>
                    <div class="input-group chat-input">
                        <input type="text" id="messageInput" class="form-control" placeholder="Type a message..." />
                        <div class="input-group-append">
                            <button class="btn btn-primary" onclick="sendMessage()">Send</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let chatThreads = [];
    let selectedChatId = null;

    function addChat() {
        const chatName = prompt("Enter chat name:");
        if (chatName) {
            const chatId = Date.now().toString();
            chatThreads.push({ id: chatId, name: chatName, messages: [] });
            renderChatList();
        }
    }

    function selectChat(chatId) {
        selectedChatId = chatId;
        renderMessages();
    }

    function renderChatList() {
        const chatList = document.getElementById('chatList');
        chatList.innerHTML = '';
        chatThreads.forEach(chat => {
            const chatItem = document.createElement('li');
            chatItem.className = 'list-group-item list-group-item-action';
            chatItem.textContent = chat.name;
            chatItem.onclick = () => selectChat(chat.id);
            chatList.appendChild(chatItem);
        });
    }

    function renderMessages() {
        const chatMessages = document.getElementById('chatMessages');
        chatMessages.innerHTML = '';
        const chat = chatThreads.find(c => c.id === selectedChatId);
        if (chat) {
            chat.messages.forEach(message => {
                const messageElement = document.createElement('div');
                messageElement.className = `chat-message ${message.role === 'user' ? 'user' : 'bot'}`;
                messageElement.textContent = message.content;
                chatMessages.appendChild(messageElement);
            });
        }
    }

    function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const messageText = messageInput.value.trim();

        if (messageText !== '' && selectedChatId) {
            const chat = chatThreads.find(c => c.id === selectedChatId);
            if (chat) {
                chat.messages.push({ role: 'user', content: messageText });
                renderMessages();
                messageInput.value = '';

                // Simulate bot response
                setTimeout(() => {
                    chat.messages.push({ role: 'bot', content: 'This is a simulated response.' });
                    renderMessages();
                }, 1000);
            }
        }
    }
    function renderChatList() {
        const chatList = document.getElementById('chatList');
        chatList.innerHTML = '';
        chatThreads.forEach(chat => {
            const chatItem = document.createElement('li');
            chatItem.className = 'list-group-item d-flex justify-content-between align-items-center';
            chatItem.innerHTML = `
                <span onclick="selectChat('${chat.id}')">${chat.name}</span>
                <button class="btn btn-danger btn-sm" onclick="deleteChat('${chat.id}')">
                    <p class="align-middle">Delete</p>
                </button>
            `;
            chatList.appendChild(chatItem);
        });
    }

    function deleteChat(chatId) {
        chatThreads = chatThreads.filter(chat => chat.id !== chatId);
        if (selectedChatId === chatId) {
            selectedChatId = null;
            document.getElementById('chatMessages').innerHTML = '';
        }
        renderChatList();
    }
    
    
</script>
</body>
</html>