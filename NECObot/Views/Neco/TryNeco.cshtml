@model IEnumerable<BLL.Models.ChatThreadModel>

@{
    ViewData["Title"] = "NECO";
}
<!DOCTYPE html>
<html>
<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #007bff;
            --secondary-color: #e9ecef;
            --border-color: #dee2e6;
            --hover-color: #f8f9fa;
            --text-color: #212529;
            --text-muted: #6c757d;
        }

        body {
            background-color: #f0f2f5;
        }

        .chat-messages {
            height: 65vh;
            overflow-y: auto;
            padding: 20px;
            background-color: #ffffff;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            height: calc(100vh - 100px);
        }

        .chat-input {
            padding: 20px;
            background-color: #fff;
            border-top: 1px solid var(--border-color);
        }

        .chat-input .form-control {
            border-radius: 20px;
            padding: 10px 20px;
            border: 1px solid var(--border-color);
        }

        .chat-input .btn {
            border-radius: 20px;
            padding: 8px 20px;
        }

        #chatThreadsContainer {
            max-height: 75vh;
            overflow-y: auto;
        }

        .chat-thread {
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .chat-thread:hover {
            background-color: var(--hover-color);
        }

        .chat-thread.active {
            background-color: #e3f2fd;
            border-left: 4px solid var(--primary-color);
        }

        .chat-thread-info {
            flex: 1;
        }

        .chat-thread-title {
            font-weight: 600;
            color: var(--text-color);
            margin-bottom: 4px;
        }

        .chat-thread-preview {
            font-size: 0.85rem;
            color: var(--text-muted);
        }

        .delete-btn {
            color: #dc3545;
            opacity: 0;
            transition: opacity 0.2s ease;
            padding: 5px 10px;
            border-radius: 5px;
            background: none;
            border: none;
        }

        .chat-thread:hover .delete-btn {
            opacity: 1;
        }

        .message {
            display: flex;
            flex-direction: column;
            max-width: 75%;
            margin-bottom: 15px;
            position: relative;
        }

        .message-content {
            padding: 12px 16px;
            border-radius: 15px;
            position: relative;
            word-wrap: break-word;
        }

        .message.sent {
            align-self: flex-end;
            margin-left: auto;
        }

        .message.received {
            align-self: flex-start;
            margin-right: auto;
        }

        .message.sent .message-content {
            background-color: var(--primary-color);
            color: white;
            border-bottom-right-radius: 5px;
        }

        .message.received .message-content {
            background-color: var(--secondary-color);
            color: var(--text-color);
            border-bottom-left-radius: 5px;
        }

        .message-time {
            font-size: 0.75rem;
            color: var(--text-muted);
            margin-top: 4px;
            align-self: flex-end;
        }

        .card {
            border: none;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            border-radius: 12px;
        }

        .card-header {
            background-color: #fff;
            border-bottom: 1px solid var(--border-color);
            padding: 15px 20px;
            border-top-left-radius: 12px !important;
            border-top-right-radius: 12px !important;
        }

        ::-webkit-scrollbar {
            width: 6px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #bbb;
            border-radius: 3px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #888;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: var(--text-muted);
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 20px;
            color: var(--border-color);
        }
    </style>
</head>
<body>
<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-4 col-lg-3">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Chats</h5>
                    <button class="btn btn-sm btn-primary" onclick="addChat()">
                        <i class="fas fa-plus"></i> New Chat
                    </button>
                </div>
                <div class="card-body p-0" id="chatThreadsContainer">
                    @foreach (var thread in Model)
                    {
                        <div class="chat-thread" data-chat-id="@thread.Id">
                            <div class="chat-thread-info">
                                <div class="chat-thread-title">@thread.Title</div>
                                <div class="chat-thread-preview">@thread.CreatedAt.ToString("MMM dd, yyyy")</div>
                            </div>
                            <button class="delete-btn" data-chat-id="@thread.Id">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-8 col-lg-9">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0" id="currentChatTitle">Select a chat to start messaging</h5>
                    <span class="text-muted" id="onlineStatus"></span>
                </div>
                <div class="card-body p-0 chat-container">
                    <div class="chat-messages" id="chatMessages">
                        <div class="empty-state">
                            <i class="fas fa-comments"></i>
                            <p>Select a chat to view messages</p>
                        </div>
                    </div>
                    <div class="chat-input">
                        <div class="input-group">
                            <input type="text" id="messageInput" class="form-control"
                                   placeholder="Type a message and press Enter..." disabled/>
                            <div class="input-group-append">
                                <button class="btn btn-primary" id="sendButton" onclick="sendMessage()" disabled>
                                    <i class="fas fa-paper-plane"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let selectedChatId = null;

    $(document).ready(function() {
        setupMessageInput();
        initializeAutoScroll();
        bindChatEvents();
    });

    function setupMessageInput() {
        $('#messageInput').on('keypress', function(e) {
            if (e.which === 13 && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });
    }

    function initializeAutoScroll() {
        const chatMessages = document.getElementById('chatMessages');
        const observer = new MutationObserver(function(mutations) {
            scrollToBottom();
        });

        observer.observe(chatMessages, {
            childList: true,
            subtree: true
        });
    }

    function scrollToBottom() {
        const chatMessages = document.getElementById('chatMessages');
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function bindChatEvents() {
        $(document).on('click', '.chat-thread', function(e) {
            if (!$(e.target).hasClass('delete-btn') && !$(e.target).closest('.delete-btn').length) {
                $('.chat-thread').removeClass('active');
                $(this).addClass('active');
                const chatId = $(this).data('chat-id');
                const chatTitle = $(this).find('.chat-thread-title').text();
                selectChat(chatId, chatTitle);
            }
        });

        $(document).on('click', '.delete-btn', function(e) {
            e.stopPropagation();
            const chatId = $(this).data('chat-id');
            deleteChat(chatId);
        });
    }

    function selectChat(chatId, title) {
        if (!chatId) return;

        selectedChatId = chatId;
        $('#currentChatTitle').text(title || 'Chat');
        $('#messageInput').prop('disabled', false).focus();
        $('#sendButton').prop('disabled', false);

        $.get('/Neco/GetMessages', { threadId: chatId })
            .done(function(data) {
                if (data && data.trim()) {
                    $('#chatMessages').html(data);
                } else {
                    $('#chatMessages').html(`
                        <div class="empty-state">
                            <i class="fas fa-comments"></i>
                            <p>No messages yet</p>
                        </div>
                    `);
                }
                scrollToBottom();
            })
            .fail(function(error) {
                console.error('Failed to load messages:', error);
                $('#chatMessages').html(`
                    <div class="empty-state">
                        <i class="fas fa-exclamation-circle text-danger"></i>
                        <p>Failed to load messages. Please try again.</p>
                    </div>
                `);
            });
    }

    function addChat() {
        const chatName = prompt("Enter chat name:");
        if (chatName && chatName.trim()) {
            $.post('/Neco/CreateChatThread', { title: chatName.trim() })
                .done(function() {
                    window.location.reload();
                })
                .fail(function(error) {
                    console.error('Failed to create chat:', error);
                    alert('Failed to create chat. Please try again.');
                });
        }
    }

    function deleteChat(chatId) {
        if (confirm('Are you sure you want to delete this chat? All messages will be deleted.')) {
            $.post('/Neco/DeleteChatThread', { id: chatId })
                .done(function() {
                    window.location.reload();
                })
                .fail(function(error) {
                    console.error('Failed to delete chat:', error);
                    alert('Failed to delete chat. Please try again.');
                });
        }
    }

    function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const messageText = messageInput.value.trim();
        const currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

        if (messageText !== '' && selectedChatId) {
            messageInput.value = '';

            const tempMessage = `
                <div class="message sent">
                    <div class="message-content">
                        ${messageText}
                    </div>
                    <div class="message-time">
                        ${currentTime}
                    </div>
                </div>
            `;
            $('#chatMessages').append(tempMessage);
            scrollToBottom();

            $.post('/Neco/SendMessage', { threadId: selectedChatId, content: messageText })
                .done(function() {
                    setTimeout(function() {
                        $.get('/Neco/GetMessages', { threadId: selectedChatId }, function(data) {
                            $('#chatMessages').html(data);
                            scrollToBottom();
                        });
                    }, 300);
                })
                .fail(function(error) {
                    console.error('Failed to send message:', error);
                    alert('Failed to send message. Please try again.');
                });
        }
    }
</script>
</body>
</html>