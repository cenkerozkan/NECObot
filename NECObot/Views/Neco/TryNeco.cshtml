@model IEnumerable<BLL.Models.ChatThreadModel>

@{
ViewData["Title"] = "NECO";
}
<!DOCTYPE html>
<html>
<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .chat-container {
            height: 500px;
            display: flex;
            flex-direction: column;
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
        }
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
            border-bottom: 1px solid #dee2e6;
        }
        .chat-message {
            padding: 10px;
            border-radius: 0.25rem;
            margin-bottom: 10px;
        }
        .chat-message.user {
            background-color: #007bff;
            color: white;
            align-self: flex-end;
        }
        .chat-message.bot {
            background-color: #f1f1f1;
            align-self: flex-start;
        }
        .chat-input {
            display: flex;
            padding: 10px;
        }
        .chat-input input {
            flex: 1;
            border-radius: 0.25rem 0 0 0.25rem;
        }
        .chat-input button {
            border-radius: 0 0.25rem 0.25rem 0;
        }
    </style>
</head>
<body>
<div class="container mt-4">
    <div class="row">
        <!-- Side menu for chat threads -->
        <div class="col-md-4" id="chatThreadsContainer">
            <!-- Chat threads will be loaded here via AJAX -->
        </div>
        <!-- Chat section -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-body chat-container">
                    <div class="chat-messages" id="chatMessages">
                        <!-- Messages will be loaded here via AJAX -->
                    </div>
                    <div class="input-group chat-input">
                        <!-- Initial Message Input Part when the page loaded first. -->
                        <input type="text" id="messageInput" class="form-control" placeholder="Type a message..."/>
                        <div class="input-group-append">
                            <button class="btn btn-primary" onclick="sendMessage()">Send</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let selectedChatId = null;

    $(document).ready(function() {
        // This is the initial loader. 
        // It calls these two functions when the
        // HTML document is ready.
        loadChatThreads();
        bindChatEvents();
    });
    // Loads all threads with AJAX request
    function loadChatThreads() {
        $.get('/Neco/GetAllChats', function(data) {
            $('#chatThreadsContainer').html(data);
            bindChatEvents();
        });
    }
    
    // Binds chat events
    function bindChatEvents() {
        $('.chat-select').on('click', function() {
            const chatId = $(this).data('chat-id');
            selectChat(chatId);
        });

        $('.chat-delete').on('click', function(e) {
            e.stopPropagation();
            const chatId = $(this).data('chat-id');
            deleteChat(chatId);
        });
    }

    function selectChat(chatId) {
        selectedChatId = chatId;
        $.get('/Neco/GetMessages', { threadId: chatId }, function(data) {
            $('#chatMessages').html(data);
        });
    }
    
    // Adds a new chat.
    function addChat() {
        const chatName = prompt("Enter chat name:");
        if (chatName) {
            $.post('/Neco/CreateChatThread', { title: chatName })
                .done(function() {
                    loadChatThreads();
                })
                .fail(function(response) {
                    alert('Failed to create chat: ' + response.responseText);
                });
        }
    }
    
    // Deletes a new chat.
    function deleteChat(chatId) {
        if (confirm('Are you sure you want to delete this chat? All messages will be deleted.')) {
            $.post('/Neco/DeleteChatThread', { id: chatId })
                .done(function() {
                    loadChatThreads();
                    if (selectedChatId === chatId) {
                        selectedChatId = null;
                        $('#chatMessages').empty();
                    }
                })
                .fail(function(response) {
                    alert('Failed to delete chat: ' + response.responseText);
                });
        }
    }

    function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const messageText = messageInput.value.trim();

        if (messageText !== '' && selectedChatId) {
            $.post('/Neco/SendMessage', { threadId: selectedChatId, content: messageText }, function() {
                selectChat(selectedChatId);
                messageInput.value = '';
            });
        }
    }
</script>
</body>
</html>